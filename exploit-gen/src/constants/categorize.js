import {DOM_NODE_STANDARD} from './dom-node-standard.js';
import {DOM_NODE_TAG_MAP} from './dom-node-to-tag.js';
import fs from 'fs';

function mapTagsAndGroupReflectAttributes(data, tagMap) {
  const attributeToTags = {};
  const output = {};

  for (const [tag, details] of Object.entries(data)) {
      const realTag = tagMap[tag] || tag;
      details.reflectAttributesDOMString.forEach(attr => {
          if (!attributeToTags[attr]) {
              attributeToTags[attr] = [];
          }
          attributeToTags[attr].push(realTag);
      });
  }


  const sharedAttributes = {};
  const uniqueAttributes = {};

  for (const [attr, tags] of Object.entries(attributeToTags)) {
      if (tags.length > 1) {
          const key = tags.sort().join(', '); // Combine tag names alphabetically
          if (!sharedAttributes[key]) {
              sharedAttributes[key] = [];
          }
          sharedAttributes[key].push(attr);
      } else {
          const tag = tags[0];
          if (!uniqueAttributes[tag]) {
              uniqueAttributes[tag] = [];
          }
          uniqueAttributes[tag].push(attr);
      }
  }

  for (const [tag, attrs] of Object.entries(uniqueAttributes)) {
      output[tag] = [attrs];
  }

  for (const [combinedTags, attrs] of Object.entries(sharedAttributes)) {
      output[combinedTags] = [attrs];
  }

  return output;
}

const result = mapTagsAndGroupReflectAttributes(DOM_NODE_STANDARD, DOM_NODE_TAG_MAP);
fs.writeFileSync('appendix-table-dom2string.json', JSON.stringify(result, null, 2));